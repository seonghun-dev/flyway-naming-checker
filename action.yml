name: flyway-naming-checker
description: Flyway Naming Checker
author: seonghun <seonghun-dev@users.noreply.github.com>
inputs:
  path:
    description: 'Write the path to match your migration script location'
    default : 'db/migration'
  token:
    description: 'The GitHub token to use for downloading the action, defaults to workflow token'
    required: true
    default: ${{ github.token }}
  
outputs:
  files:
    description : 'Show all file in current dir'
  error:
    description: 'The description of any error that occurred'
    value: ${{ steps.run.outputs.error }}

runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=flyway-naming-checker" >> $GITHUB_ENV
        echo "action_org=seonghun-dev" >> $GITHUB_ENV
        echo "binary_name=flyway-naming-checker" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: |
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.error }}"
